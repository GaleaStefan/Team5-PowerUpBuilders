@model ProjectViewModel

@section Scripts {
    <script src="~/js/taskManager.js"></script>
}

<div class="row" style="margin-top: 100px;">
    <div class="col" >
        <header class="text-center">
            <h1 class="mt-1">@Model.Project.Name</h1>
        </header>
    </div>
</div>

<button id="new-task-button" class="btn btn-outline-secondary w-100">+ New Task</button>

<div class="row p-0" style="margin-top: 10px;">

    <div class="col-lg@(Model.Employees.Any() ? "-9" : "") m-0">
        @{
            var tasksByStatus = Model.Project.Tasks.GroupBy(t => t.Status).OrderBy(group => group.Key);
        }
        <div id="task-view" class="container-fluid w-100" data-projectId="@Model.Project.Id">
            <div class="row w-100">
                @foreach (var group in tasksByStatus)
                {

                    <div class="col-lg bg-light overflow-auto">
                        <h5 class="text-center">@group.Key.ToString() Tasks</h5>
                        @foreach (var task in group)
                        {
                            @await Html.PartialAsync("_TaskCard", task)
                        }
                    </div>
                }
            </div>
        </div>

    </div>
    @if (Model.Employees.Any())
    {
        <div class="col-lg-3 p-0">
            <div class="container-fluid text-center">Assigned Employees</div>
            <div class="border text-center mx-1">
                @foreach (var employee in Model.Employees)
                {
                    <div class="container-fluid w-100">@employee.Name</div>
                }
            </div>
        </div>
    }

</div>