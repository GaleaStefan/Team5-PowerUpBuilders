@model TaskEditorViewModel

<div class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@(Model.ModalMode == ModalMode.ViewEdit ? Model.Task.Title : "Task Editor")</h5>

                @if (Model.ModalMode == ModalMode.ViewEdit)
                {
                    <span class="badge badge-info">@Model.Task.Status.ToString()</span>
                }


                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>


            <div id="edit-body" class="modal-body @(Model.ModalMode == ModalMode.Edit ? "d-block" : "d-none")">
                <form id="task-form" data-taskId="@(Model.ModalMode == ModalMode.Edit ? 0 : Model.Task.Id)">
                    <div class="form-group">
                        <label for="task-title">Title:</label>
                        <input id="task-title" type="text" name="title" class="form-control" value="@Model.Task.Title" />
                    </div>

                    <div class="form-group">
                        <label for="task-description">Description</label>
                        <textarea form="#task-form" id="task-description" name="description" class="form-control" rows="4">
                            @Model.Task.Description
                        </textarea>
                    </div>

                    <div id="jsGrid">
                        <script>
                            $(document).ready(function () {
                                 var clients = [
                                { "Name": "Otto Clay", "Age": 25},
                                { "Name": "Connor Johnston", "Age": 45},
                            ];


                            @foreach (var employee in Model.Employees)
                            {
                                @:clients.push({"Name": @employee.Name, "ID": @employee.Id});
                            }

                            var countries = [
                                { Name: "", Id: 0 },
                                { Name: "United States", Id: 1 },
                                { Name: "Canada", Id: 2 },
                                { Name: "United Kingdom", Id: 3 }
                            ];


                            $("#jsGrid").jsGrid({
                                width: "100%",
                                height: "400px",

                                inserting: true,
                                editing: true,
                                sorting: true,
                                paging: true,

                                data: clients,

                                fields: [
                                    { name: "Name", type: "text", width: 150, validate: "required" },
                                    { name: "ID", type: "number", width: 50 },
                                    { type: "control" }
                                ]
                            });
                            });

                        </script>
                    </div>

                    <select class="form-select w-100" multiple name="employees">
                        @foreach (var employee in Model.Employees)
                        {
                            @if (Model.AssignedEmployees.Contains(employee))
                            {
                                <option value="@employee.Id" selected>@employee.Name</option>
                            }
                            else
                            {
                                <option value="@employee.Id">@employee.Name</option>
                            }

                        }
                    </select>

                    <select class="form-select w-100" multiple name="images">
                        @foreach (var photo in Model.ImagePaths)
                        {
                            <option value="@photo">@photo</option>
                        }
                    </select>

                    <input id="files-input" type="file" name="uploads" multiple />

                </form>
            </div>

            @if (Model.ModalMode == ModalMode.ViewEdit)
            {
                <div id="readonly-body" class="modal-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <div>Description</div>
                            <p>@Model.Task.Description</p>
                        </div>
                        <div class="col-sm-6">
                            <div>Employees</div>
                            <ul>
                                @foreach (var employee in Model.AssignedEmployees)
                                {
                                    <li>@employee.Name</li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="container-fluid w-100">
                        <ul>
                            @foreach (var photo in Model.ImagePaths)
                            {
                                <li>@photo</li>
                            }
                        </ul>
                    </div>

                    <div class="container-fluid w-100">
                        <ul>
                            @foreach (var file in Model.FilePaths)
                            {
                                <li>@file</li>
                            }
                        </ul>
                    </div>
                </div>
            }

            <div class="modal-footer">
                <button id="edit-button" type="button" class="btn btn-primary @(Model.ModalMode == ModalMode.ViewEdit ? "d-block" : "d-none")">Edit</button>
                <button id="save-button" type="button" class="btn btn-primary @(Model.ModalMode == ModalMode.Edit ? "d-block" : "d-none")">Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>